// AG tests
// ========

@import "compass";
@import "susy";
@import "compass/reset";

// Settings
// --------

$columns: 4   !default;
$gutters: .25 !default;

// Complex AG tests
// ----------------

@mixin ag-test(
  $class,
  $c,
  $g,
  $isolate: false,
  $gp: outside after
) {
  $columns: $c;
  $gutters: $g;
  $gutter-position: $gp;

  $nested-gutter: if(is-inside-gutter($gutter-position), 0%, false);

  .#{$class} {
    @include float-container;
    @include leader(.5);
    @include trailer(.5);

    > .size1of5 {
      min-height: rhythm(10);
      &:first-of-type { @include float-span(2, 1, $isolate: $isolate); }
      ~ .size1of5 { @include float-span(2, last, $isolate: $isolate); }
    }
    > .size3of5 {
      @include float-span(6,3, $isolate: $isolate, $gutter-override: $nested-gutter);
      > .size1of2 {
        &:first-child { @include float-span(3, 1, get-columns(6,3), $isolate: $isolate); }
        + .size1of2 { @include float-span(3, last, get-columns(6,3), $isolate: $isolate); }
      }
      > .full {
        clear: both;
        background: none;
      }
    }

    .full {
      .size1of3 {
        @include float-span(2, 1, get-columns(6,3), $isolate: $isolate);
        min-height: rhythm(6.5);
      }
      .size2of3 {
        @include float-span(4, last, get-columns(6,3), $isolate: $isolate, $gutter-override: $nested-gutter);
      }
    }

    .size2of3 {
      .size1of2 {
        &:first-child { @include float-span(2, 1, get-columns(4,5), $isolate: $isolate); }
        + .size1of2 { @include float-span(2, last, get-columns(4,5), $isolate: $isolate); }
      }
      .full {
        clear: both;
      }
    }

    .isolation div {
      @include isolate-grid(2, $columns, $gutters);
    }
  }
}

// Symmetrical
// -----------

$a-class        : symmetrical;
$a-columns      : 10;
$a-gutters      : .25;
$column-width   : 4em;
$show-background-grids: false;

@include ag-test($a-class, $a-columns, $a-gutters, $gp: outside split);

// Asymmetrical
// ------------

$b-class          : asymmetrical;
$b-columns        : .5 2 1.25 1 3.25 1.75 3 2 1 3.75;
$b-gutters        : .5;
$container-width  : 80%;
$show-background-grids: true;

@include ag-test($b-class, $b-columns, $b-gutters, true);

// Grid background
// ---------------

@include grid-overlay(
  $a-class $a-columns $a-gutters,
  $b-class $b-columns $b-gutters
);

// Styles
// ------

@include establish-baseline;

body { font-family: sans-serif; }

h1 {
  background: #333;
  color: #eee;
  text-transform: uppercase;
}
h1, h2, h3 {
  clear: both;
  padding: rhythm(.5);
  font-weight: bold;
}

.grid-element {
  @include trailer(.5);
  opacity: .5;
  min-height: rhythm(3);
}

.size1of2 { background: #f99; }
.size1of5 { background: #aef; }
.size1of3 { background: orange; }
.full.grid-element { background: pink; }

.isolation {
  @include clearfix;
  clear: both;
  div {
    @include trailer(.5);
    height: rhythm(1);
    background: red;
  }
}

// Box
// ---

$columns: 1 2 3 .5 3 2 1.5 2 1 .5 2 1;
// $columns: 12;
$gutters: .25;
$column-width: 3em;
$container-width: false;

.box {
  @include float-container;
  @include trailer;
  position: relative;
  .margin {
    @include margin-before(2,1);
    @include margin-after(1,last);
    @include padding-before(1,3);
    @include padding-after(2,10);
    background: rgba(red, .25);
  }
  .padding {
    height: rhythm(1);
    background: rgba(green, .25);
  }
  .bleed {
    @include bleed-output(30%);
    // @include bleed-output(2,6);
    background: rgba(blue, .25);
  }
}

// // Static
// // ------

$columns: 12;
$gutter: .25;
$column-width: false;
$container-width: 960px;
$static-output: true;

.static {
  @include float-container;
  div {
    @include float-span(3);
    @include trailer;
    min-height: rhythm(2);
    background: rgba(blue,.25);
  }
}
