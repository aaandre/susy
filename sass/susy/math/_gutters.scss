// Gutter math
// ===========

@function is-inside-gutter(
  $gutter-position: $gutter-position
) {
  $inside: false;

  @if index($gutter-position, inside) or index($gutter-position, inside-static) {
    $inside: true;
  }

  @return $inside;
}

// Find relative width of a gutter
@function relative-gutter-span(
  $columns: $columns,
  $gutters: $gutters
) {
  $context: column-sum($columns, $gutters);

  @return percentage($gutters / $context);
}

// Find static width of a gutter
@function static-gutter-span(
  $gutters: $gutters,
  $column-width: $column-width,
  $container-width: $container-width
) {
  $width: null;
  $column-width: fix-static-column-width($columns, $gutters, $column-width, $container-width);

  @if $column-width {
    $width: $gutters * $column-width;
  }

  @return $width;
}

// Return the width of a gutter - static or relative
@function get-gutter-width(
  $columns: $columns,
  $gutters: $gutters,
  $column-width: $column-width,
  $container-width: $container-width,
  $static: $static-output
) {
  $gutter: null;

  @if $static {
    $gutter: static-gutter-span($gutters, $column-width, $container-width);
  } @else {
    $gutter: relative-gutter-span($columns, $gutters);
  }

  @return $gutter;
}