// Float span
// ==========

// Output span
@mixin float-span-output(
  $width,
  $float: from($direction)
) {
  width: $width;
  float: $float;
}

// Calculate relative span
@mixin float-span(
  $span,
  $location         : false,
  $columns          : $columns,
  $gutters          : $gutters,
  $isolate          : false,
  $column-width     : $column-width,
  $gutter-override  : false,
  $static           : $static-output,
  $gutter-position  : $gutter-position,
  $container-width  : $container-width,
  $flow             : $direction
) {
  // set flow variables
  $to             : to($flow);
  $from           : from($flow);
  $float          : $from;

  // set width
  $width          : get-span-width($span, $location, $columns, $gutters, $column-width, $gutter-position, $container-width, $static);

  // set gutter width
  $gutter-static  : if(index($gutter-position,inside-static) or $static, true, false);
  $gutter         : if($gutter-override, $gutter-override, get-gutter-width($columns, $gutters, $column-width, $container-width, $gutter-static));

  // initiate potential gutters
  $gutter-before  : null;
  $gutter-after   : null;

  // set gutters
  @if index($gutter-position,before) {
    $gutter-before: $gutter;
  } @else if index($gutter-position,after) {
    $gutter-after: $gutter;
  } @else if index($gutter-position,split) {
    $gutter-before: $gutter/2;
    $gutter-after: $gutter-before;
  }

  // initiate potential properties
  $margin-before  : null;
  $margin-after   : null;
  $padding-before : null;
  $padding-after  : null;

  // set gutter properties
  @if is-inside-gutter($gutter-position) {
    $padding-before: $gutter-before;
    $padding-after: $gutter-after;
  } @else {
    $margin-before: $gutter-before;
    $margin-after: $gutter-after;
  }

  // set property overrides
  @if $isolate {
    $margin-before: get-isolation-position($span, $location, $columns, $gutters, $column-width, $gutter-position, $container-width, $static);
    $margin-after: -100%;
  } @else {
    @if is-last($span, $location, $columns) {
      $float: $to;
      $margin-after: null;
    }
    @if is-first($span, $location, $columns) {
      $margin-before: null;
    }
  }

  // output
  @include float-span-output($width, $float);
  margin-#{$from}: $margin-before;
  margin-#{$to}: $margin-after;
  padding-#{$from}: $padding-before;
  padding-#{$to}: $padding-after;
}
