// Float span
// ==========

// Output span
@mixin float-span-output(
  $width,
  $float      : from($direction),
  $before     : null,
  $after      : null,
  $property   : margin,
  $flow       : $direction
) {
  $to     : to($flow);
  $from   : from($flow);

  width: $width;
  float: $float;
  #{$property}-#{$from}: $before;
  #{$property}-#{$to}: $after;
}

// Calculate relative span
@mixin float-span(
  $span,
  $location         : false,
  $columns          : $columns,
  $gutters          : $gutters,
  $isolate          : false,
  $column-width     : $column-width,
  $gutter-override  : false,
  $static           : $static-output,
  $gutter-position  : $gutter-position,
  $flow             : $direction
) {
  $to     : to($flow);
  $from   : from($flow);

  $float  : $from;

  $width  : get-span-width($span, $location, $columns, $gutters, $column-width, $static);
  $gutter : null;

  @if $gutter-override {
    $gutter: $gutter-override;
  } @else {
    $gutter: get-gutter-width($columns, $gutters, $column-width, $static);
  }

  $property     : null;
  $before       : null;
  $after        : null;

  @if index($gutter-position,inside) {
    $property: padding;
  } @else {
    $property: margin;
  }

  @if index($gutter-position,before) {
    $before: $gutter;
  } @else if index($gutter-position,after) {
    $after: $gutter;
  } @else if index($gutter-position,split) {
    $before: $gutter/2;
    $after: $before;
  }

  @if $isolate {
    $before: get-isolation-position($span, $location, $columns, $gutters);
    $after: -100%;
  } @else if is-last($span, $location, $columns) {
    $float: $to;
    $after: null;
  }

  @include float-span-output($width, $float, $before, $after, $property, $flow);
}
